From d5bdb1eb94079814e6d880a72e9aefc7aa09cc58 Mon Sep 17 00:00:00 2001
From: Johannes Schindelin <johannes.schindelin@gmx.de>
Date: Wed, 7 Dec 2022 01:50:10 +0100
Subject: [PATCH 4/8] pcre2grep: flush stdout before spawning callouts

On Unix, the stdout handle is truly shared when spawning a process. On
Windows, it is not, which means that text can still be buffered when a
process is spawned, that process can write to stdout and then exit, and
the caller's text in stdout is _still_ buffered.

Work around that by explicitly flushing `stdout` before spawning a
process on Windows. For good luck, let's also flush `stderr`.

Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>
---
 src/pcre2grep.c | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/src/pcre2grep.c b/src/pcre2grep.c
index e7eb311..b6249c1 100644
--- a/src/pcre2grep.c
+++ b/src/pcre2grep.c
@@ -2468,6 +2468,8 @@ while (length > 0)
 necessary, otherwise assume fork(). */
 
 #ifdef WIN32
+fflush(stderr);
+fflush(stdout);
 result = _spawnvp(_P_WAIT, argsvector[0], (const char * const *)argsvector);
 
 #elif defined __VMS
-- 
2.39.0.rc0.windows.1

